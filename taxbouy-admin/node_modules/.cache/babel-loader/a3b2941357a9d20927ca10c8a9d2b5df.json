{"ast":null,"code":"var _jsxFileName = \"/Users/Shruti_Bhateja/Documents/taxbouy-admin/taxbouy-admin/src/containers/Shop/store.container.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Button } from \"@material-ui/core\";\nimport * as sc from \"./styles\";\nimport { displayModal, toggleLoader, displayToastMessage } from \"../../store/common/application.slice\";\nimport StoreSetup from \"./StoreSetup\";\nimport { ActionTray } from \"../../components/global/styles\";\nimport Table from \"../../components/table\";\nimport { defaultStoreDetails } from \"../../constants/defaults\";\nimport { openMyStore } from \"../../apis\";\nimport { addToStore } from \"./shop.slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StoreContainer = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const shopSelector = useSelector(state => state.shop);\n  const columns = [{\n    field: \"store_location_name\",\n    header: \"Store Primary Location\",\n    width: \"15%\"\n  }, {\n    field: \"store_address\",\n    header: \"Store Address\",\n    width: \"30%\"\n  }, {\n    field: \"store_contact_number||store_email_address\",\n    header: \"Contact Details\",\n    width: \"20%\"\n  }, {\n    field: \"serve_on_tables\",\n    header: \"Has Sittings\",\n    values: [\"Yes\", \"No\"],\n    width: \"15%\"\n  }];\n\n  const openAddStoreModal = () => {\n    dispatch(displayModal({\n      open: true,\n      modalProps: {\n        title: \"Add new store\",\n        component: StoreSetup,\n        componentProps: {\n          storeDetails: defaultStoreDetails,\n          isStoreSetup: true,\n          onSubmit\n        }\n      }\n    }));\n  };\n\n  const onSubmit = values => {\n    dispatch(toggleLoader(true));\n    openMyStore({\n      shopId: shopSelector.shopId,\n      storeLocationName: values.storePrimaryLocation,\n      storeAddress: values.storeAddress,\n      storeContactNumber: values.storeContactNumber,\n      storeEmailAddress: values.storeEmailAddress,\n      serveOnTables: values.serveOnTables\n    }).then(_ref => {\n      let {\n        data,\n        message\n      } = _ref;\n      dispatch(addToStore(data.dataValues));\n      dispatch(toggleLoader(false));\n      dispatch(displayModal({\n        open: false,\n        modalProps: {}\n      }));\n      dispatch(displayToastMessage({\n        open: true,\n        type: \"success\",\n        message\n      }));\n    }).catch(error => {\n      dispatch(toggleLoader(false));\n      dispatch(displayToastMessage({\n        open: true,\n        type: \"error\",\n        message: error.message\n      }));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(sc.SetupWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(ActionTray, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"contained\",\n        onClick: openAddStoreModal,\n        children: \"Add New Store\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      rows: shopSelector.stores,\n      editAction: true,\n      isFetching: shopSelector.loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StoreContainer, \"iyCaUs+LXeXgHCaWyE7nnV7L6lk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = StoreContainer;\nexport default StoreContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreContainer\");","map":{"version":3,"sources":["/Users/Shruti_Bhateja/Documents/taxbouy-admin/taxbouy-admin/src/containers/Shop/store.container.jsx"],"names":["React","useSelector","useDispatch","Button","sc","displayModal","toggleLoader","displayToastMessage","StoreSetup","ActionTray","Table","defaultStoreDetails","openMyStore","addToStore","StoreContainer","dispatch","shopSelector","state","shop","columns","field","header","width","values","openAddStoreModal","open","modalProps","title","component","componentProps","storeDetails","isStoreSetup","onSubmit","shopId","storeLocationName","storePrimaryLocation","storeAddress","storeContactNumber","storeEmailAddress","serveOnTables","then","data","message","dataValues","type","catch","error","stores","loading"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Button } from \"@material-ui/core\";\nimport * as sc from \"./styles\";\nimport { displayModal, toggleLoader, displayToastMessage } from \"../../store/common/application.slice\";\nimport StoreSetup from \"./StoreSetup\";\nimport { ActionTray } from \"../../components/global/styles\";\nimport Table from \"../../components/table\";\nimport { defaultStoreDetails } from \"../../constants/defaults\";\nimport { openMyStore } from \"../../apis\";\nimport { addToStore } from \"./shop.slice\";\n\nconst StoreContainer = () => {\n    const dispatch = useDispatch();\n    const shopSelector = useSelector(state => state.shop);\n\n    const columns = [\n        { field: \"store_location_name\", header: \"Store Primary Location\", width: \"15%\" },\n        { field: \"store_address\", header: \"Store Address\", width: \"30%\" },\n        { field: \"store_contact_number||store_email_address\", header: \"Contact Details\", width: \"20%\" },\n        { field: \"serve_on_tables\", header: \"Has Sittings\", values: [\"Yes\", \"No\"], width: \"15%\" },\n    ];\n\n    const openAddStoreModal = () => {\n        dispatch(displayModal({\n            open: true,\n            modalProps: {\n                title: \"Add new store\",\n                component: StoreSetup,\n                componentProps: {\n                    storeDetails: defaultStoreDetails,\n                    isStoreSetup: true,\n                    onSubmit\n                }\n            }\n        }));\n    }\n\n    const onSubmit = (values) => {\n        dispatch(toggleLoader(true));\n\n        openMyStore({\n            shopId: shopSelector.shopId,\n            storeLocationName: values.storePrimaryLocation,\n            storeAddress: values.storeAddress,\n            storeContactNumber: values.storeContactNumber,\n            storeEmailAddress: values.storeEmailAddress,\n            serveOnTables: values.serveOnTables\n        }).then(({ data, message }) => {\n            dispatch(addToStore(data.dataValues));\n            dispatch(toggleLoader(false));\n            dispatch(displayModal({\n                open: false,\n                modalProps: {}\n            }));\n            dispatch(displayToastMessage({\n                open: true,\n                type: \"success\",\n                message\n            }));\n        }).catch(error => {\n            dispatch(toggleLoader(false));\n            dispatch(displayToastMessage({\n                open: true,\n                type: \"error\",\n                message: error.message\n            }));\n        })\n    }\n\n    return (\n        <sc.SetupWrapper>\n            <ActionTray>\n                <Button color=\"primary\" variant=\"contained\" onClick={openAddStoreModal}>Add New Store</Button>\n            </ActionTray>\n            <Table columns={columns} rows={shopSelector.stores} editAction isFetching={shopSelector.loading} />\n        </sc.SetupWrapper>\n    );\n}\n\nexport default StoreContainer;"]},"metadata":{},"sourceType":"module"}