{"ast":null,"code":"var _jsxFileName = \"/Users/Shruti_Bhateja/Documents/taxbouy-admin/taxbouy-admin/src/components/table/index.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, IconButton } from \"@material-ui/core\";\nimport { Edit, Delete, ToggleOff, ToggleOn } from \"@material-ui/icons\";\nimport Empty from \"../../components/Empty\";\nimport Placeholder from \"../../components/placeholder\";\nimport Pagination from \"../../components/pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MuiTable(_ref) {\n  let {\n    columns,\n    rows,\n    isFetching,\n    deleteAction,\n    deactivateAction,\n    editAction\n  } = _ref;\n\n  const getValue = (row, column) => {\n    if (column.field.includes(\"||\")) {\n      const fields = column.field.split(\"||\");\n      return fields.map(fld => row[fld]).join(\"\\n\");\n    }\n\n    if (typeof row[column.field] === \"boolean\") {\n      return column.values[row[column.field] ? 0 : 1];\n    }\n\n    if (column.type === \"date\") {\n      return moment(row[column.field]).format(\"lll\");\n    }\n\n    if (column.prefix) {\n      return column.prefix + \" \" + row[column.field];\n    }\n\n    return row[column.field];\n  };\n\n  const onPageChange = (_, newPage) => {\n    console.log(newPage);\n  };\n\n  const perPageChange = event => {\n    console.log(parseInt(event.target.value, 10));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!rows.length && !isFetching && /*#__PURE__*/_jsxDEV(Empty, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 45\n    }, this), /*#__PURE__*/_jsxDEV(Placeholder, {\n      isLoading: isFetching,\n      children: rows.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            \"aria-label\": \"simple table\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                  width: column.width,\n                  children: column.header\n                }, column.field, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 60\n                }, this)), (deleteAction || deactivateAction || editAction) && /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 90\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: rows.map((row, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: getValue(row, column)\n                }, `${column.field}_${row.id}_${index}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 64\n                }, this)), (deleteAction || deactivateAction || editAction) && /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: [deactivateAction && /*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: () => deactivateAction(row),\n                    children: !row[\"is_active\"] ? /*#__PURE__*/_jsxDEV(ToggleOff, {\n                      fontSize: \"small\",\n                      className: \"red\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 63,\n                      columnNumber: 70\n                    }, this) : /*#__PURE__*/_jsxDEV(ToggleOn, {\n                      fontSize: \"small\",\n                      className: \"green\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 63,\n                      columnNumber: 119\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 66\n                  }, this), editAction && /*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: () => editAction(row),\n                    children: /*#__PURE__*/_jsxDEV(Edit, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 66,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 60\n                  }, this), deleteAction && /*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: () => deleteAction(row.id),\n                    children: /*#__PURE__*/_jsxDEV(Delete, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 69,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 62\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 94\n                }, this)]\n              }, row.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          page: 0,\n          total: rows.length,\n          onPageChange: onPageChange,\n          perPageChange: perPageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c = MuiTable;\nMuiTable.defaultProps = {\n  rows: [],\n  isFetching: false,\n  deleteAction: undefined,\n  editAction: undefined,\n  deactivateAction: undefined\n};\nMuiTable.propTypes = {\n  columns: PropTypes.array.isRequired,\n  rows: PropTypes.array,\n  isFetching: PropTypes.bool,\n  deleteAction: PropTypes.func,\n  editAction: PropTypes.func,\n  deactivateAction: PropTypes.func\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"MuiTable\");","map":{"version":3,"sources":["/Users/Shruti_Bhateja/Documents/taxbouy-admin/taxbouy-admin/src/components/table/index.jsx"],"names":["React","PropTypes","moment","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","IconButton","Edit","Delete","ToggleOff","ToggleOn","Empty","Placeholder","Pagination","MuiTable","columns","rows","isFetching","deleteAction","deactivateAction","editAction","getValue","row","column","field","includes","fields","split","map","fld","join","values","type","format","prefix","onPageChange","_","newPage","console","log","perPageChange","event","parseInt","target","value","length","width","header","index","id","defaultProps","undefined","propTypes","array","isRequired","bool","func"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, IconButton } from \"@material-ui/core\";\nimport { Edit, Delete, ToggleOff, ToggleOn } from \"@material-ui/icons\";\nimport Empty from \"../../components/Empty\";\nimport Placeholder from \"../../components/placeholder\";\nimport Pagination from \"../../components/pagination\";\n\nexport default function MuiTable({ columns, rows, isFetching, deleteAction, deactivateAction, editAction }) {\n    const getValue = (row, column) => {\n        if (column.field.includes(\"||\")) {\n            const fields = column.field.split(\"||\");\n            return fields.map(fld => row[fld]).join(\"\\n\");\n        }\n\n        if (typeof row[column.field] === \"boolean\") {\n            return column.values[row[column.field] ? 0 : 1];\n        }\n\n        if (column.type === \"date\") {\n            return moment(row[column.field]).format(\"lll\");\n        }\n\n        if (column.prefix) {\n            return column.prefix + \" \" + row[column.field];\n        }\n\n        return row[column.field];\n    }\n\n    const onPageChange = (_, newPage) => {\n        console.log(newPage)\n    }\n\n    const perPageChange = (event) => {\n        console.log(parseInt(event.target.value, 10))\n    }\n\n    return (\n        <>\n            {!rows.length && !isFetching && <Empty />}\n\n            <Placeholder isLoading={isFetching}>\n                {rows.length > 0 && <>\n                    <TableContainer component={Paper}>\n                        <Table aria-label=\"simple table\">\n                            <TableHead>\n                                <TableRow>\n                                    {columns.map(column => <TableCell width={column.width} key={column.field}>{column.header}</TableCell>)}\n                                    {(deleteAction || deactivateAction || editAction) && <TableCell>Actions</TableCell>}\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {rows.map((row, index) => (\n                                    <TableRow key={row.id}>\n                                        {columns.map(column => <TableCell key={`${column.field}_${row.id}_${index}`}>\n                                            {getValue(row, column)}\n                                        </TableCell>)}\n\n                                        {(deleteAction || deactivateAction || editAction) && <TableCell>\n                                            {deactivateAction && <IconButton onClick={() => deactivateAction(row)}>\n                                                {!row[\"is_active\"] ? <ToggleOff fontSize=\"small\" className=\"red\" /> : <ToggleOn fontSize=\"small\" className=\"green\" />}\n                                            </IconButton>}\n                                            {editAction && <IconButton onClick={() => editAction(row)}>\n                                                <Edit fontSize=\"small\" />\n                                            </IconButton>}\n                                            {deleteAction && <IconButton onClick={() => deleteAction(row.id)}>\n                                                <Delete fontSize=\"small\" />\n                                            </IconButton>}\n                                        </TableCell>}\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                    <Pagination page={0} total={rows.length} onPageChange={onPageChange} perPageChange={perPageChange} />\n                </>}\n            </Placeholder>\n        </>\n    );\n}\n\nMuiTable.defaultProps = {\n    rows: [],\n    isFetching: false,\n    deleteAction: undefined,\n    editAction: undefined,\n    deactivateAction: undefined,\n}\n\nMuiTable.propTypes = {\n    columns: PropTypes.array.isRequired,\n    rows: PropTypes.array,\n    isFetching: PropTypes.bool,\n    deleteAction: PropTypes.func,\n    editAction: PropTypes.func,\n    deactivateAction: PropTypes.func,\n}"]},"metadata":{},"sourceType":"module"}