{"ast":null,"code":"var _jsxFileName = \"/Users/Shruti_Bhateja/Documents/taxbouy-admin/taxbouy-admin/src/containers/Users/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { TextField, Grid, Typography, FormControl, FormHelperText } from \"@material-ui/core\";\nimport Button from \"../../components/form/Button\";\nimport { loginApi } from \"../../apis\";\nimport { displayToastMessage, toggleLoader } from \"../../store/common/application.slice\";\nimport { FormWrapper, LoginForm, PoweredBy } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  username: yup.string('Enter your username').required('Username is required'),\n  password: yup.string('Enter your password').min(6, 'Password should be of minimum 6 characters length').required('Password is required')\n});\n\nconst Login = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const onFormSubmit = useCallback(values => {\n    dispatch(toggleLoader(true));\n    loginApi(values).then(_ref => {\n      let {\n        data: {\n          token,\n          user\n        }\n      } = _ref;\n      dispatch(toggleLoader(false));\n      /* set token */\n\n      localStorage.setItem('token', token);\n      /* set user profile */\n\n      localStorage.setItem('profile', JSON.stringify(user));\n      /* redirect to dashboard */\n      // console.log(history);\n\n      window.location.reload();\n    }).catch(error => {\n      dispatch(toggleLoader(false));\n      dispatch(displayToastMessage({\n        open: true,\n        type: \"error\",\n        message: error.message\n      }));\n    });\n  }, [dispatch]);\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    validationSchema,\n    onSubmit: values => {\n      onFormSubmit(values);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(LoginForm, {\n    children: [/*#__PURE__*/_jsxDEV(FormWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          align: \"left\",\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          className: \"mt2\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Username\",\n                fullWidth: true,\n                id: \"username\",\n                name: \"username\",\n                value: formik.values.username,\n                onChange: formik.handleChange,\n                error: formik.touched.username && Boolean(formik.errors.username),\n                helperText: formik.touched.username && formik.errors.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row plus2\",\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                id: \"password\",\n                name: \"password\",\n                label: \"Password\",\n                type: \"password\",\n                value: formik.values.password,\n                onChange: formik.handleChange,\n                error: formik.touched.password && Boolean(formik.errors.password),\n                helperText: formik.touched.password && formik.errors.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row text-center m0\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                fullWidth: true,\n                type: \"submit\",\n                children: \"Log in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this), \"Forgot your credentials? Contact to customer support to get your Username or Password.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PoweredBy, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text1\",\n          children: \"\\xA0\\xA0Made with\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            position: \"relative\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"heart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text2\",\n          children: \"\\xA0By Ninealgo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://ninealgo.com/images/ninelogo-white.png\",\n        width: \"80\",\n        alt: \"ninealgo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"eCFutmqX6JlztoFVmTQMTTUieF4=\", false, function () {\n  return [useDispatch, useFormik];\n});\n\n_c = Login;\nexport default _c2 = withRouter(Login);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/Shruti_Bhateja/Documents/taxbouy-admin/taxbouy-admin/src/containers/Users/index.jsx"],"names":["React","useCallback","withRouter","useDispatch","useFormik","yup","TextField","Grid","Typography","FormControl","FormHelperText","Button","loginApi","displayToastMessage","toggleLoader","FormWrapper","LoginForm","PoweredBy","validationSchema","object","username","string","required","password","min","Login","dispatch","onFormSubmit","values","then","data","token","user","localStorage","setItem","JSON","stringify","window","location","reload","catch","error","open","type","message","formik","initialValues","onSubmit","handleSubmit","handleChange","touched","Boolean","errors","position"],"mappings":"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","sourcesContent":["import React, { useCallback } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { TextField, Grid, Typography, FormControl, FormHelperText } from \"@material-ui/core\";\nimport Button from \"../../components/form/Button\";\nimport { loginApi } from \"../../apis\";\nimport { displayToastMessage, toggleLoader } from \"../../store/common/application.slice\";\nimport { FormWrapper, LoginForm, PoweredBy } from \"./styles\";\n\nconst validationSchema = yup.object({\n    username: yup\n        .string('Enter your username')\n        .required('Username is required'),\n    password: yup\n        .string('Enter your password')\n        .min(6, 'Password should be of minimum 6 characters length')\n        .required('Password is required'),\n});\n\nconst Login = () => {\n    const dispatch = useDispatch();\n\n    const onFormSubmit = useCallback((values) => {\n        dispatch(toggleLoader(true));\n\n        loginApi(values)\n            .then(({ data: { token, user } }) => {\n                dispatch(toggleLoader(false));\n                /* set token */\n                localStorage.setItem('token', token);\n                /* set user profile */\n                localStorage.setItem('profile', JSON.stringify(user));\n                /* redirect to dashboard */\n                // console.log(history);\n                window.location.reload();\n            })\n            .catch(error => {\n                dispatch(toggleLoader(false));\n                dispatch(displayToastMessage({\n                    open: true,\n                    type: \"error\",\n                    message: error.message\n                }));\n            });\n    }, [dispatch]);\n\n    const formik = useFormik({\n        initialValues: {\n            username: '',\n            password: '',\n        },\n        validationSchema,\n        onSubmit: (values) => {\n            onFormSubmit(values);\n        }\n    });\n    return (\n        <LoginForm>\n            <FormWrapper>\n                <Grid>\n                    <Typography variant=\"h5\" align=\"left\">\n                        Log In\n                    </Typography>\n                </Grid>\n\n                <form onSubmit={formik.handleSubmit}>\n                    <Grid className=\"mt2\">\n                        <FormControl fullWidth>\n                            <div className=\"form-row\">\n                                <TextField\n                                    label=\"Username\"\n                                    fullWidth\n                                    id=\"username\"\n                                    name=\"username\"\n                                    value={formik.values.username}\n                                    onChange={formik.handleChange}\n                                    error={formik.touched.username && Boolean(formik.errors.username)}\n                                    helperText={formik.touched.username && formik.errors.username}\n                                />\n                            </div>\n\n                            <div className=\"form-row plus2\">\n                                <TextField\n                                    fullWidth\n                                    id=\"password\"\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    value={formik.values.password}\n                                    onChange={formik.handleChange}\n                                    error={formik.touched.password && Boolean(formik.errors.password)}\n                                    helperText={formik.touched.password && formik.errors.password}\n                                />\n                            </div>\n\n                            <div className=\"form-row text-center m0\">\n                                <Button variant=\"contained\" color=\"primary\" fullWidth type=\"submit\">Log in</Button>\n                            </div>\n\n                        </FormControl>\n\n                        <FormHelperText className=\"text-center\">\n                            <br />\n                            Forgot your credentials? Contact to customer support to get your Username or Password.\n                        </FormHelperText>\n                    </Grid>\n                </form>\n\n            </FormWrapper>\n\n            <PoweredBy>\n                <Typography variant=\"h6\">\n                    <span className=\"text1\">&nbsp;&nbsp;Made with</span>\n                    <p style={{ position: \"relative\" }}>\n                        <span className=\"heart\"></span>\n                    </p>\n                    <span className=\"text2\">&nbsp;By Ninealgo</span>\n                </Typography>\n                <img src=\"https://ninealgo.com/images/ninelogo-white.png\" width=\"80\" alt=\"ninealgo\" />\n            </PoweredBy>\n        </LoginForm>\n    );\n}\n\nexport default withRouter(Login);"]},"metadata":{},"sourceType":"module"}