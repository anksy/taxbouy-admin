{"ast":null,"code":"import { BaseUri, httpVerbs } from \"../../constants\";\nimport { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nconst url = \"category\";\nexport const categoryApi = createApi({\n  reducerPath: \"categories\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: BaseUri,\n    prepareHeaders: headers => {\n      const token = localStorage.token;\n\n      if (token) {\n        headers.set('Authorization', `Bearer ${token}`);\n      }\n\n      return headers;\n    }\n  }),\n  tagTypes: [url],\n  endpoints: builder => ({\n    getCategories: builder.query({\n      query: () => url,\n      providesTags: [url]\n    }),\n    upsertCategory: builder.mutation({\n      query: _ref => {\n        let {\n          method,\n          body\n        } = _ref;\n        return {\n          url,\n          method,\n          body\n        };\n      },\n      invalidatesTags: [url]\n    }),\n    deleteCategory: builder.mutation({\n      query: resourceId => ({\n        url: `${url}/${resourceId}`,\n        method: httpVerbs.DELETE\n      }),\n      invalidatesTags: [url]\n    })\n  })\n});\nexport const {\n  useGetCategoriesQuery,\n  useUpsertCategoryMutation,\n  useDeleteCategoryMutation\n} = categoryApi;","map":{"version":3,"sources":["/Users/Shruti_Bhateja/Documents/taxbouy-admin/taxbouy-admin/src/services/query/category.js"],"names":["BaseUri","httpVerbs","createApi","fetchBaseQuery","url","categoryApi","reducerPath","baseQuery","baseUrl","prepareHeaders","headers","token","localStorage","set","tagTypes","endpoints","builder","getCategories","query","providesTags","upsertCategory","mutation","method","body","invalidatesTags","deleteCategory","resourceId","DELETE","useGetCategoriesQuery","useUpsertCategoryMutation","useDeleteCategoryMutation"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,SAAlB,QAAmC,iBAAnC;AACA,SAASC,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C;AAEA,MAAMC,GAAG,GAAG,UAAZ;AAEA,OAAO,MAAMC,WAAW,GAAGH,SAAS,CAAC;AACjCI,EAAAA,WAAW,EAAE,YADoB;AAEjCC,EAAAA,SAAS,EAAEJ,cAAc,CAAC;AACtBK,IAAAA,OAAO,EAAER,OADa;AAEtBS,IAAAA,cAAc,EAAGC,OAAD,IAAa;AACzB,YAAMC,KAAK,GAAGC,YAAY,CAACD,KAA3B;;AACA,UAAIA,KAAJ,EAAW;AACPD,QAAAA,OAAO,CAACG,GAAR,CAAY,eAAZ,EAA8B,UAASF,KAAM,EAA7C;AACH;;AAED,aAAOD,OAAP;AACH;AATqB,GAAD,CAFQ;AAajCI,EAAAA,QAAQ,EAAE,CAACV,GAAD,CAbuB;AAcjCW,EAAAA,SAAS,EAAGC,OAAD,KAAc;AACrBC,IAAAA,aAAa,EAAED,OAAO,CAACE,KAAR,CAAc;AACzBA,MAAAA,KAAK,EAAE,MAAMd,GADY;AAEzBe,MAAAA,YAAY,EAAE,CAACf,GAAD;AAFW,KAAd,CADM;AAKrBgB,IAAAA,cAAc,EAAEJ,OAAO,CAACK,QAAR,CAAiB;AAC7BH,MAAAA,KAAK,EAAE;AAAA,YAAC;AAAEI,UAAAA,MAAF;AAAUC,UAAAA;AAAV,SAAD;AAAA,eAAuB;AAAEnB,UAAAA,GAAF;AAAOkB,UAAAA,MAAP;AAAeC,UAAAA;AAAf,SAAvB;AAAA,OADsB;AAE7BC,MAAAA,eAAe,EAAE,CAACpB,GAAD;AAFY,KAAjB,CALK;AASrBqB,IAAAA,cAAc,EAAET,OAAO,CAACK,QAAR,CAAiB;AAC7BH,MAAAA,KAAK,EAAGQ,UAAD,KAAiB;AAAEtB,QAAAA,GAAG,EAAG,GAAEA,GAAI,IAAGsB,UAAW,EAA5B;AAA+BJ,QAAAA,MAAM,EAAErB,SAAS,CAAC0B;AAAjD,OAAjB,CADsB;AAE7BH,MAAAA,eAAe,EAAE,CAACpB,GAAD;AAFY,KAAjB;AATK,GAAd;AAdsB,CAAD,CAA7B;AA8BP,OAAO,MAAM;AAAEwB,EAAAA,qBAAF;AAAyBC,EAAAA,yBAAzB;AAAoDC,EAAAA;AAApD,IAAkFzB,WAAxF","sourcesContent":["import { BaseUri, httpVerbs } from \"../../constants\";\nimport { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nconst url = \"category\";\n\nexport const categoryApi = createApi({\n    reducerPath: \"categories\",\n    baseQuery: fetchBaseQuery({\n        baseUrl: BaseUri,\n        prepareHeaders: (headers) => {\n            const token = localStorage.token;\n            if (token) {\n                headers.set('Authorization', `Bearer ${token}`)\n            }\n\n            return headers;\n        }\n    }),\n    tagTypes: [url],\n    endpoints: (builder) => ({\n        getCategories: builder.query({\n            query: () => url,\n            providesTags: [url]\n        }),\n        upsertCategory: builder.mutation({\n            query: ({ method, body }) => ({ url, method, body }),\n            invalidatesTags: [url]\n        }),\n        deleteCategory: builder.mutation({\n            query: (resourceId) => ({ url: `${url}/${resourceId}`, method: httpVerbs.DELETE }),\n            invalidatesTags: [url]\n        })\n    })\n});\n\nexport const { useGetCategoriesQuery, useUpsertCategoryMutation, useDeleteCategoryMutation } = categoryApi;"]},"metadata":{},"sourceType":"module"}