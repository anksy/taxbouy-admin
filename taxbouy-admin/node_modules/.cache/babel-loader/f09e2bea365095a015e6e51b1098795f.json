{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { getShopnameThunk, getShopStoresThunk } from \"./shop.thunk\";\nconst initialState = {\n  shopId: \"\",\n  shopname: \"\",\n  stores: [],\n  loading: false\n};\n/* shop slice */\n\nexport const shopSlice = createSlice({\n  name: 'shop',\n  initialState,\n  reducers: {\n    setShopname: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.shopId = payload.shopId;\n      state.shopname = payload.shopname;\n    },\n    addToStore: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      const {\n        stores\n      } = state;\n      stores.push(payload);\n      state.stores = stores;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getShopnameThunk.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(getShopnameThunk.rejected, state => {\n      state.loading = false;\n    });\n    builder.addCase(getShopnameThunk.fulfilled, (state, _ref3) => {\n      var _payload$data;\n\n      let {\n        payload\n      } = _ref3;\n\n      if (payload !== null && payload !== void 0 && (_payload$data = payload.data) !== null && _payload$data !== void 0 && _payload$data.id) {\n        state.shopId = payload.data.id;\n        state.shopname = payload.data.shopname;\n        state.loading = false;\n      }\n    });\n    builder.addCase(getShopStoresThunk.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(getShopStoresThunk.rejected, state => {\n      state.loading = false;\n    });\n    builder.addCase(getShopStoresThunk.fulfilled, (state, _ref4) => {\n      let {\n        payload: {\n          data\n        }\n      } = _ref4;\n      state.stores = data.stores;\n      state.loading = false;\n    });\n  }\n});\nexport const {\n  setShopname,\n  addToStore\n} = shopSlice.actions;\nexport default shopSlice.reducer;","map":{"version":3,"sources":["/Users/Shruti_Bhateja/Documents/taxbouy-admin/taxbouy-admin/src/containers/Shop/shop.slice.js"],"names":["createSlice","getShopnameThunk","getShopStoresThunk","initialState","shopId","shopname","stores","loading","shopSlice","name","reducers","setShopname","state","payload","addToStore","push","extraReducers","builder","addCase","pending","rejected","fulfilled","data","id","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,gBAAT,EAA2BC,kBAA3B,QAAqD,cAArD;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,QAAQ,EAAE,EAFO;AAGjBC,EAAAA,MAAM,EAAE,EAHS;AAIjBC,EAAAA,OAAO,EAAE;AAJQ,CAArB;AAOA;;AACA,OAAO,MAAMC,SAAS,GAAGR,WAAW,CAAC;AACjCS,EAAAA,IAAI,EAAE,MAD2B;AAEjCN,EAAAA,YAFiC;AAGjCO,EAAAA,QAAQ,EAAE;AACNC,IAAAA,WAAW,EAAE,CAACC,KAAD,WAAwB;AAAA,UAAhB;AAAEC,QAAAA;AAAF,OAAgB;AACjCD,MAAAA,KAAK,CAACR,MAAN,GAAeS,OAAO,CAACT,MAAvB;AACAQ,MAAAA,KAAK,CAACP,QAAN,GAAiBQ,OAAO,CAACR,QAAzB;AACH,KAJK;AAKNS,IAAAA,UAAU,EAAE,CAACF,KAAD,YAAwB;AAAA,UAAhB;AAAEC,QAAAA;AAAF,OAAgB;AAChC,YAAM;AAAEP,QAAAA;AAAF,UAAaM,KAAnB;AACAN,MAAAA,MAAM,CAACS,IAAP,CAAYF,OAAZ;AACAD,MAAAA,KAAK,CAACN,MAAN,GAAeA,MAAf;AACH;AATK,GAHuB;AAcjCU,EAAAA,aAAa,EAAGC,OAAD,IAAa;AACxBA,IAAAA,OAAO,CAACC,OAAR,CAAgBjB,gBAAgB,CAACkB,OAAjC,EAA2CP,KAAD,IAAW;AACjDA,MAAAA,KAAK,CAACL,OAAN,GAAgB,IAAhB;AACH,KAFD;AAGAU,IAAAA,OAAO,CAACC,OAAR,CAAgBjB,gBAAgB,CAACmB,QAAjC,EAA4CR,KAAD,IAAW;AAClDA,MAAAA,KAAK,CAACL,OAAN,GAAgB,KAAhB;AACH,KAFD;AAGAU,IAAAA,OAAO,CAACC,OAAR,CAAgBjB,gBAAgB,CAACoB,SAAjC,EAA4C,CAACT,KAAD,YAAwB;AAAA;;AAAA,UAAhB;AAAEC,QAAAA;AAAF,OAAgB;;AAChE,UAAIA,OAAJ,aAAIA,OAAJ,gCAAIA,OAAO,CAAES,IAAb,0CAAI,cAAeC,EAAnB,EAAuB;AACnBX,QAAAA,KAAK,CAACR,MAAN,GAAeS,OAAO,CAACS,IAAR,CAAaC,EAA5B;AACAX,QAAAA,KAAK,CAACP,QAAN,GAAiBQ,OAAO,CAACS,IAAR,CAAajB,QAA9B;AACAO,QAAAA,KAAK,CAACL,OAAN,GAAgB,KAAhB;AACH;AACJ,KAND;AAOAU,IAAAA,OAAO,CAACC,OAAR,CAAgBhB,kBAAkB,CAACiB,OAAnC,EAA6CP,KAAD,IAAW;AACnDA,MAAAA,KAAK,CAACL,OAAN,GAAgB,IAAhB;AACH,KAFD;AAGAU,IAAAA,OAAO,CAACC,OAAR,CAAgBhB,kBAAkB,CAACkB,QAAnC,EAA8CR,KAAD,IAAW;AACpDA,MAAAA,KAAK,CAACL,OAAN,GAAgB,KAAhB;AACH,KAFD;AAGAU,IAAAA,OAAO,CAACC,OAAR,CAAgBhB,kBAAkB,CAACmB,SAAnC,EAA8C,CAACT,KAAD,YAAkC;AAAA,UAA1B;AAAEC,QAAAA,OAAO,EAAE;AAAES,UAAAA;AAAF;AAAX,OAA0B;AAC5EV,MAAAA,KAAK,CAACN,MAAN,GAAegB,IAAI,CAAChB,MAApB;AACAM,MAAAA,KAAK,CAACL,OAAN,GAAgB,KAAhB;AACH,KAHD;AAIH;AAtCgC,CAAD,CAA7B;AAyCP,OAAO,MAAM;AAAEI,EAAAA,WAAF;AAAeG,EAAAA;AAAf,IAA8BN,SAAS,CAACgB,OAA9C;AACP,eAAehB,SAAS,CAACiB,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { getShopnameThunk, getShopStoresThunk } from \"./shop.thunk\";\n\nconst initialState = {\n    shopId: \"\",\n    shopname: \"\",\n    stores: [],\n    loading: false\n}\n\n/* shop slice */\nexport const shopSlice = createSlice({\n    name: 'shop',\n    initialState,\n    reducers: {\n        setShopname: (state, { payload }) => {\n            state.shopId = payload.shopId;\n            state.shopname = payload.shopname;\n        },\n        addToStore: (state, { payload }) => {\n            const { stores } = state;\n            stores.push(payload);\n            state.stores = stores;\n        }\n    },\n    extraReducers: (builder) => {\n        builder.addCase(getShopnameThunk.pending, (state) => {\n            state.loading = true;\n        });\n        builder.addCase(getShopnameThunk.rejected, (state) => {\n            state.loading = false;\n        });\n        builder.addCase(getShopnameThunk.fulfilled, (state, { payload }) => {\n            if (payload?.data?.id) {\n                state.shopId = payload.data.id;\n                state.shopname = payload.data.shopname;\n                state.loading = false;\n            }\n        });\n        builder.addCase(getShopStoresThunk.pending, (state) => {\n            state.loading = true;\n        });\n        builder.addCase(getShopStoresThunk.rejected, (state) => {\n            state.loading = false;\n        });\n        builder.addCase(getShopStoresThunk.fulfilled, (state, { payload: { data } }) => {\n            state.stores = data.stores;\n            state.loading = false;\n        });\n    }\n});\n\nexport const { setShopname, addToStore } = shopSlice.actions;\nexport default shopSlice.reducer;"]},"metadata":{},"sourceType":"module"}