{"ast":null,"code":"import axios from 'axios';\nimport { httpVerbs } from \"../constants\";\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\naxios.interceptors.response.use(response => {\n  return response.data;\n}, error => {\n  var _error$response, _error$response$data;\n\n  if (error !== null && error !== void 0 && (_error$response = error.response) !== null && _error$response !== void 0 && (_error$response$data = _error$response.data) !== null && _error$response$data !== void 0 && _error$response$data.logout) {\n    localStorage.clear();\n    window.location.reload();\n  }\n\n  return Promise.reject(error.response.data);\n});\nexport const http = _ref => {\n  let {\n    method,\n    url,\n    payload\n  } = _ref;\n  return axios({\n    method,\n    url: process.env.REACT_APP_APIPATH + url,\n    [method === httpVerbs.GET ? \"params\" : \"data\"]: payload\n  });\n};","map":{"version":3,"sources":["/Users/Shruti_Bhateja/Documents/taxbouy-admin/taxbouy-admin/src/services/http.js"],"names":["axios","httpVerbs","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","response","data","logout","clear","window","location","reload","http","method","url","payload","process","env","REACT_APP_APIPATH","GET"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,cAA1B;AAEAD,KAAK,CAACE,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACIC,MAAM,IAAI;AACN,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,MAAIF,KAAJ,EAAW;AACPD,IAAAA,MAAM,CAACI,OAAP,CAAeC,aAAf,GAAgC,UAASJ,KAAM,EAA/C;AACH;;AACD,SAAOD,MAAP;AACH,CAPL,EAQIM,KAAK,IAAI;AACL,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAVL;AAaAX,KAAK,CAACE,YAAN,CAAmBY,QAAnB,CAA4BV,GAA5B,CACIU,QAAQ,IAAI;AACR,SAAOA,QAAQ,CAACC,IAAhB;AACH,CAHL,EAIIJ,KAAK,IAAI;AAAA;;AACL,MAAIA,KAAJ,aAAIA,KAAJ,kCAAIA,KAAK,CAAEG,QAAX,oEAAI,gBAAiBC,IAArB,iDAAI,qBAAuBC,MAA3B,EAAmC;AAC/BT,IAAAA,YAAY,CAACU,KAAb;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH;;AACD,SAAOR,OAAO,CAACC,MAAR,CAAeF,KAAK,CAACG,QAAN,CAAeC,IAA9B,CAAP;AACH,CAVL;AAaA,OAAO,MAAMM,IAAI,GAAG,QAA8B;AAAA,MAA7B;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,GAAV;AAAeC,IAAAA;AAAf,GAA6B;AAC9C,SAAOxB,KAAK,CAAC;AACTsB,IAAAA,MADS;AAETC,IAAAA,GAAG,EAAEE,OAAO,CAACC,GAAR,CAAYC,iBAAZ,GAAgCJ,GAF5B;AAGT,KAACD,MAAM,KAAKrB,SAAS,CAAC2B,GAArB,GAA2B,QAA3B,GAAsC,MAAvC,GAAgDJ;AAHvC,GAAD,CAAZ;AAKH,CANM","sourcesContent":["import axios from 'axios';\nimport { httpVerbs } from \"../constants\";\n\naxios.interceptors.request.use(\n    config => {\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n    },\n    error => {\n        return Promise.reject(error);\n    }\n);\n\naxios.interceptors.response.use(\n    response => {\n        return response.data;\n    },\n    error => {\n        if (error?.response?.data?.logout) {\n            localStorage.clear();\n            window.location.reload();\n        }\n        return Promise.reject(error.response.data);\n    }\n);\n\nexport const http = ({ method, url, payload }) => {\n    return axios({\n        method,\n        url: process.env.REACT_APP_APIPATH + url,\n        [method === httpVerbs.GET ? \"params\" : \"data\"]: payload\n    });\n}"]},"metadata":{},"sourceType":"module"}